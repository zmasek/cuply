# Generated by Django 3.2.4 on 2022-10-01 10:16

import common.mixins
import common.models
import datetime
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import mptt.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Device',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fsm_class', models.CharField(choices=[('AnalogSensor', 'Analog Sensor'), ('DigitalActuator', 'Digital Actuator'), ('PWM', 'PWM'), ('I2C', 'I2C')], default='AnalogSensor', max_length=50, verbose_name='FSM class')),
                ('category', models.CharField(blank=True, choices=[('temperature', 'Temperature'), ('humidity', 'Humidity'), ('light', 'Light')], default='', max_length=50, verbose_name='category')),
                ('name', models.CharField(max_length=50, unique=True, validators=[common.models.validate_attr_compatible], verbose_name='name')),
                ('description', models.TextField(blank=True, default='', verbose_name='description')),
                ('pin', models.CharField(blank=True, default='', max_length=50, verbose_name='pin')),
                ('blob', models.JSONField(default=common.models.default_blob, max_length=50, verbose_name='blob')),
                ('unit', models.CharField(blank=True, default='', max_length=50, verbose_name='unit')),
                ('image', models.ImageField(blank=True, max_length=255, null=True, upload_to='devices')),
                ('after', models.TimeField(blank=True, default=datetime.time(8, 0), null=True, verbose_name='after')),
                ('before', models.TimeField(blank=True, default=datetime.time(21, 0), null=True, verbose_name='before')),
                ('thresholds', models.JSONField(default=dict, verbose_name='thresholds')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='created')),
                ('desired_state', models.CharField(default='', max_length=50, verbose_name='desired state')),
                ('lft', models.PositiveIntegerField(editable=False)),
                ('rght', models.PositiveIntegerField(editable=False)),
                ('tree_id', models.PositiveIntegerField(db_index=True, editable=False)),
                ('level', models.PositiveIntegerField(editable=False)),
            ],
            options={
                'verbose_name': 'Device',
                'verbose_name_plural': 'Devices',
                'ordering': ('-created',),
            },
            bases=(models.Model, common.mixins.DeviceMixin),
        ),
        migrations.CreateModel(
            name='Microcontroller',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='name')),
                ('description', models.TextField(blank=True, default='', verbose_name='description')),
                ('path', models.CharField(max_length=255, verbose_name='path')),
            ],
            options={
                'verbose_name': 'Microcontroller',
                'verbose_name_plural': 'Microcontrollers',
                'ordering': ('name',),
            },
            bases=(models.Model, common.mixins.MicrocontrollerMixin),
        ),
        migrations.CreateModel(
            name='Plant',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('time_installed', models.DateTimeField(auto_now_add=True)),
                ('current_state', models.IntegerField(choices=[(0, 'Germination, sprouting, bud development'), (1, 'Leaf development'), (2, 'Formation of side shoots, tillering'), (3, 'Stem elongation or rosette growth, shoot development'), (4, 'Development of harvestable vegetative plant parts, bolting'), (5, 'Inflorescence emergence, heading'), (6, 'Flowering'), (7, 'Development of fruit'), (8, 'Ripening or maturity of fruit and seed'), (9, 'Senescence, beginning of dormancy')], default=4, verbose_name='current state')),
                ('remote_id', models.CharField(max_length=24)),
                ('name', models.CharField(blank=True, max_length=255)),
                ('image_url', models.URLField(blank=True)),
            ],
        ),
        migrations.CreateModel(
            name='SnapShot',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp', models.DateTimeField(auto_now_add=True, verbose_name='timestamp')),
                ('value', models.IntegerField(verbose_name='value')),
                ('device', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='common.device', verbose_name='device')),
            ],
            options={
                'verbose_name': 'SnapShot',
                'verbose_name_plural': 'SnapShots',
            },
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('remote_token', models.CharField(max_length=100)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Profile',
                'verbose_name_plural': 'Profiles',
                'ordering': ('user',),
                'get_latest_by': 'user.created',
            },
        ),
        migrations.AddField(
            model_name='device',
            name='microcontroller',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='common.microcontroller', verbose_name='microcontroller'),
        ),
        migrations.AddField(
            model_name='device',
            name='parent',
            field=mptt.fields.TreeForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='common.device'),
        ),
    ]
